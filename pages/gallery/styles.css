* { box-sizing: border-box; -webkit-user-drag: none; user-select: none;}

body {
  font-family: sans-serif;
  color: white;
  position: relative;
}
.nav-bar {
  display: flex;
  width: 100%;
  height: 100%;
  justify-content: flex-end;
}

.button-anchor {
  display: flex;
  width: calc(var(--nav-size) * 0.8);
  text-decoration:none;
}

.nav-button {
  background-color: #007bff;
  color: #e0e0e0;
  padding: 5px 10px;
  border-radius: 5px;
  cursor: pointer;
  border: transparent;
}
body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  background: url('/assets/images/space1.jpg') no-repeat center center fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  animation: rotateBackground 600s linear infinite;
  
}

@keyframes rotateBackground {
  0% {
    transform: scale(1) rotateX(0deg) rotateY(0deg);
  }
  50% {
    transform: scale(2) rotateX(15deg) rotateY(60deg);
  }
  100% {
    transform: scale(1) rotateX(0deg) rotateY(0deg);
  }
}



.container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  place-items: center;
  align-content: center;
  min-height: 100vh;
  padding-bottom: 10px;
  gap: 20px;
  
}

.scene {
  width: 512px;
  height: 512px;
  margin: 80px;
  perspective: 1024px;
  position: relative; /* Add this to establish a new stacking context */
}
.scene::before,
.scene::after,
.scene > .cube__hover::before,
.scene > .cube__hover::after {
  content: '';
  position: absolute;
  background: #ffffff;
  transition: all 1s;
}

/* Top border */
.scene::before {
  top: 0;
  left: 0;
  height: 1px;
  width: 0;
}

/* Right border */
.scene > .cube__hover::before {
  top: 0;
  right: 0;
  bottom: 0;
  width: 1px;
  height: 0;
}

/* Bottom border */
.scene::after {
  bottom: 0;
  left: 0;
  height: 1px;
  width: 0;
}

/* Left border */
.scene > .cube__hover::after {
  bottom: 0;
  left: 0;
  top: 0;
  width: 1px;
  height: 0;
}

/* Transition the width and height properties when hovered */
.scene.hovered::before {
  transition-delay: 0s;
  width: 100%;
}

.scene.hovered > .cube__hover::before {
  transition-delay: 1s;
  height: 100%;
}

.scene.hovered::after {
  transition-delay: 2s;
  width: 100%;
}

.scene.hovered > .cube__hover::after {
  transition-delay: 3s;
  height: 100%;
}



.cube {
  width: 512px;
  height: 512px;
  position: relative;
  transform-style: preserve-3d;
  transform: translateZ(-512px);
  transition: transform 1s;
}
.cube.paused {
  animation-play-state: paused;
 
}
.cube__hover {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1; /* This will place the hover div on top of the cube */
}

.cube.show-front  { transform: translateZ(-512px) rotateY(   0deg); }
.cube.show-right  { transform: translateZ(-512px) rotateY( -90deg); }
.cube.show-back   { transform: translateZ(-512px) rotateY(-180deg); }
.cube.show-left   { transform: translateZ(-512px) rotateY(  90deg); }
.cube.show-top    { transform: translateZ(-512px) rotateX( -90deg); }
.cube.show-bottom { transform: translateZ(-512px) rotateX(  90deg); }

.cube__face {
  position: absolute;
  width: 512px;
  height: 512px;
  border: 2px solid pink;
  line-height: 512px;
  font-size: 40px;
  font-weight: bold;
  color: white;
  text-align: center;
}

.cube__face--front  { opacity: 0.5; transition: opacity 1s;;}
.cube__face--right  { opacity: 0.5; transition: opacity 1s;;}
.cube__face--back   { opacity: 0.5; transition: opacity 1s;;}
.cube__face--left   { opacity: 0.5; transition: opacity 1s;;}
.cube__face--top    { opacity: 0.5; transition: opacity 1s;;}
.cube__face--bottom { opacity: 0.5; transition: opacity 1s;;}




.cube__face--front  { transform: rotateY(  0deg) translateZ(256px); }
.cube__face--right  { transform: rotateY( 90deg) translateZ(256px); }
.cube__face--back   { transform: rotateY(180deg) translateZ(256px); }
.cube__face--left   { transform: rotateY(-90deg) translateZ(256px); }
.cube__face--top    { transform: rotateX( 90deg) translateZ(256px); }
.cube__face--bottom { transform: rotateX(-90deg) translateZ(256px); }




label { margin-right: 5px; opacity: 0; transition: opacity 1s; font-family: monospace; font-size: medium;}

